//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TwinfieldLoginSessionService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30514-0828")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.twinfield.com/", ConfigurationName="TwinfieldLoginSessionService.SessionSoap")]
    public interface SessionSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.twinfield.com/Logon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TwinfieldLoginSessionService.LogonResponse Logon(TwinfieldLoginSessionService.LogonRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.twinfield.com/Logon", ReplyAction="*")]
        System.Threading.Tasks.Task<TwinfieldLoginSessionService.LogonResponse> LogonAsync(TwinfieldLoginSessionService.LogonRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.twinfield.com/OAuthLogon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TwinfieldLoginSessionService.OAuthLogonResponse OAuthLogon(TwinfieldLoginSessionService.OAuthLogonRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.twinfield.com/OAuthLogon", ReplyAction="*")]
        System.Threading.Tasks.Task<TwinfieldLoginSessionService.OAuthLogonResponse> OAuthLogonAsync(TwinfieldLoginSessionService.OAuthLogonRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30514-0828")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.twinfield.com/")]
    public partial class Header
    {
        
        private string sessionIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string SessionID
        {
            get
            {
                return this.sessionIDField;
            }
            set
            {
                this.sessionIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30514-0828")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.twinfield.com/")]
    public enum LogonResult
    {
        
        /// <remarks/>
        Ok,
        
        /// <remarks/>
        Blocked,
        
        /// <remarks/>
        Untrusted,
        
        /// <remarks/>
        Invalid,
        
        /// <remarks/>
        Deleted,
        
        /// <remarks/>
        Disabled,
        
        /// <remarks/>
        OrganisationInactive,
        
        /// <remarks/>
        ClientInvalid,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30514-0828")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.twinfield.com/")]
    public enum LogonAction
    {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        SMSLogon,
        
        /// <remarks/>
        ChangePassword,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30514-0828")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Logon", WrapperNamespace="http://www.twinfield.com/", IsWrapped=true)]
    public partial class LogonRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.twinfield.com/", Order=0)]
        public string user;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.twinfield.com/", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.twinfield.com/", Order=2)]
        public string organisation;
        
        public LogonRequest()
        {
        }
        
        public LogonRequest(string user, string password, string organisation)
        {
            this.user = user;
            this.password = password;
            this.organisation = organisation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30514-0828")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogonResponse", WrapperNamespace="http://www.twinfield.com/", IsWrapped=true)]
    public partial class LogonResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.twinfield.com/")]
        public TwinfieldLoginSessionService.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.twinfield.com/", Order=0)]
        public TwinfieldLoginSessionService.LogonResult LogonResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.twinfield.com/", Order=1)]
        public TwinfieldLoginSessionService.LogonAction nextAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.twinfield.com/", Order=2)]
        public string cluster;
        
        public LogonResponse()
        {
        }
        
        public LogonResponse(TwinfieldLoginSessionService.Header Header, TwinfieldLoginSessionService.LogonResult LogonResult, TwinfieldLoginSessionService.LogonAction nextAction, string cluster)
        {
            this.Header = Header;
            this.LogonResult = LogonResult;
            this.nextAction = nextAction;
            this.cluster = cluster;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30514-0828")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OAuthLogon", WrapperNamespace="http://www.twinfield.com/", IsWrapped=true)]
    public partial class OAuthLogonRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.twinfield.com/", Order=0)]
        public string clientToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.twinfield.com/", Order=1)]
        public string clientSecret;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.twinfield.com/", Order=2)]
        public string accessToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.twinfield.com/", Order=3)]
        public string accessSecret;
        
        public OAuthLogonRequest()
        {
        }
        
        public OAuthLogonRequest(string clientToken, string clientSecret, string accessToken, string accessSecret)
        {
            this.clientToken = clientToken;
            this.clientSecret = clientSecret;
            this.accessToken = accessToken;
            this.accessSecret = accessSecret;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30514-0828")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OAuthLogonResponse", WrapperNamespace="http://www.twinfield.com/", IsWrapped=true)]
    public partial class OAuthLogonResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.twinfield.com/")]
        public TwinfieldLoginSessionService.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.twinfield.com/", Order=0)]
        public TwinfieldLoginSessionService.LogonResult OAuthLogonResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.twinfield.com/", Order=1)]
        public TwinfieldLoginSessionService.LogonAction nextAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.twinfield.com/", Order=2)]
        public string cluster;
        
        public OAuthLogonResponse()
        {
        }
        
        public OAuthLogonResponse(TwinfieldLoginSessionService.Header Header, TwinfieldLoginSessionService.LogonResult OAuthLogonResult, TwinfieldLoginSessionService.LogonAction nextAction, string cluster)
        {
            this.Header = Header;
            this.OAuthLogonResult = OAuthLogonResult;
            this.nextAction = nextAction;
            this.cluster = cluster;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30514-0828")]
    public interface SessionSoapChannel : TwinfieldLoginSessionService.SessionSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30514-0828")]
    public partial class SessionSoapClient : System.ServiceModel.ClientBase<TwinfieldLoginSessionService.SessionSoap>, TwinfieldLoginSessionService.SessionSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SessionSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(SessionSoapClient.GetBindingForEndpoint(endpointConfiguration), SessionSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SessionSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SessionSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SessionSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SessionSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SessionSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TwinfieldLoginSessionService.LogonResponse TwinfieldLoginSessionService.SessionSoap.Logon(TwinfieldLoginSessionService.LogonRequest request)
        {
            return base.Channel.Logon(request);
        }
        
        public TwinfieldLoginSessionService.Header Logon(string user, string password, string organisation, out TwinfieldLoginSessionService.LogonResult LogonResult, out TwinfieldLoginSessionService.LogonAction nextAction, out string cluster)
        {
            TwinfieldLoginSessionService.LogonRequest inValue = new TwinfieldLoginSessionService.LogonRequest();
            inValue.user = user;
            inValue.password = password;
            inValue.organisation = organisation;
            TwinfieldLoginSessionService.LogonResponse retVal = ((TwinfieldLoginSessionService.SessionSoap)(this)).Logon(inValue);
            LogonResult = retVal.LogonResult;
            nextAction = retVal.nextAction;
            cluster = retVal.cluster;
            return retVal.Header;
        }
        
        public System.Threading.Tasks.Task<TwinfieldLoginSessionService.LogonResponse> LogonAsync(TwinfieldLoginSessionService.LogonRequest request)
        {
            return base.Channel.LogonAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TwinfieldLoginSessionService.OAuthLogonResponse TwinfieldLoginSessionService.SessionSoap.OAuthLogon(TwinfieldLoginSessionService.OAuthLogonRequest request)
        {
            return base.Channel.OAuthLogon(request);
        }
        
        public TwinfieldLoginSessionService.Header OAuthLogon(string clientToken, string clientSecret, string accessToken, string accessSecret, out TwinfieldLoginSessionService.LogonResult OAuthLogonResult, out TwinfieldLoginSessionService.LogonAction nextAction, out string cluster)
        {
            TwinfieldLoginSessionService.OAuthLogonRequest inValue = new TwinfieldLoginSessionService.OAuthLogonRequest();
            inValue.clientToken = clientToken;
            inValue.clientSecret = clientSecret;
            inValue.accessToken = accessToken;
            inValue.accessSecret = accessSecret;
            TwinfieldLoginSessionService.OAuthLogonResponse retVal = ((TwinfieldLoginSessionService.SessionSoap)(this)).OAuthLogon(inValue);
            OAuthLogonResult = retVal.OAuthLogonResult;
            nextAction = retVal.nextAction;
            cluster = retVal.cluster;
            return retVal.Header;
        }
        
        public System.Threading.Tasks.Task<TwinfieldLoginSessionService.OAuthLogonResponse> OAuthLogonAsync(TwinfieldLoginSessionService.OAuthLogonRequest request)
        {
            return base.Channel.OAuthLogonAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.SessionSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.SessionSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.SessionSoap))
            {
                return new System.ServiceModel.EndpointAddress("https://login.twinfield.com/webservices/session.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.SessionSoap12))
            {
                return new System.ServiceModel.EndpointAddress("https://login.twinfield.com/webservices/session.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            SessionSoap,
            
            SessionSoap12,
        }
    }
}
